MTF1.1   NTFS-Dateisystem aufgebau:

          Bootsektor:
              Enthält den Master Boot Record (MBR) und den BIOS Parameter Block (BPB)
              Informationen über Dateisystem und Bootkonfiguration
      
          Master File Table (MFT):
              Zentrales Verwaltungselement
              Speichert alle Dateien und Verzeichnisse als 1024 Byte große Einträge
      
          MFT-Spiegelung (MFTMirr):
              Sicherungskopie der ersten vier Einträge der MFT
              Ermöglicht Wiederherstellung bei Beschädigung
      
          Log-Datei ($LogFile):
              Enthält Transaktionsprotokolle
              Ermöglicht Wiederherstellung nach Absturz
      
          Attributdateien:
              $Bitmap: Verfolgt belegte und freie Cluster
              $Boot: Enthält Bootsektor
              $BadClus: Listet defekte Cluster auf
              $Secure: Verwaltet Sicherheitsinformationen und ACLs
      
          Cluster:
              Kleinste Zuordnungseinheit, meist 4 KB groß
              Dateien erstrecken sich über mehrere Cluster
      
          Attribute:
              Beschreiben Dateien und Verzeichnisse, z.B. $STANDARD_INFORMATION, $FILE_NAME, $DATA
              Daten resident (innerhalb des MFT-Eintrags) oder non-resident (außerhalb)
      
          Indizes:
              Verzeichnisse verwenden B-Bäume für schnelle Dateisuche
      
          Sicherheit:
              Unterstützt ACLs und EFS (Encrypting File System)

1.2 a) Es handelt sich um eine MBR Partitionierung
    b) Es gibt eine Partition von Typ HPFS/NTFS/exFAT

1.3 a) Der Bootblock beginnt beim Offset 0x0
    b) Die Diskette speichert 512 Bytes pro Sektor
    c) Ein Cluster besteht aus 8 Sektoren
    d) Es handelt sich um eine Bootdisk mit Kapazität von 8 MB, formatiert mit NTFS
    e) Die MFT beginnt bei Cluster 426
    f) Pro MTF-Record wird ein Viertel eines Clusters verwendet

1.4 a) Der MTF-Eintrag beeinhaltet 4 Attribute in Cluster 962 und 963
    b) Standartinformationen (Typ-ID 0x10) und Datenattribute (Typ-ID 0x60/0x64)
    c) Die $DATA Attribute in den Clustern 962 und 963 sind beide resident und speichern sehr kleine Datenmengen direkt im MFT-Eintrag
    d) Die Hex-Dumps der Cluster 962 & 963 zeigen, dass die $DATA Attribute bei Offset ´0x60/0x64' beginnen und resident sind
    e) Die absolute Größe des Attributs umfasst die Gesamtlänge des Attributs einschließlich seines Headers und aller Daten. Die Länge der Attributsdaten.
       Durch die Analyse der Hex-Dumps und der Attribut-Header können wir die Struktur und die Inhalte der Attribute im MFT-Eintrag verstehen.
          analysieren wir das erste Attribut:
          
          Offset 0x38: Beginn des ersten Attributs
          Attributstyp: 0x10 ($STANDARD_INFORMATION)
          Länge des Attributs: 0x40 (64 Bytes)
          Resident-Flag: 0x00 (Resident)
          Länge des Namens: 0x00 (kein Name)
          Offset zum Namen: 0x00 (kein Name)
          Flags: 0x00
          Attribut-ID: 0x0000
          Die Länge des Attributs (0x40 oder 64 Bytes) umfasst den Header und die Daten. Die tatsächlichen Daten beginnen nach dem Header
          
          analysieren wir das zweite Attribut:
          
          Offset 0x64: Beginn des zweiten Attributs
          Attributstyp: 0x80 ($DATA)
          Länge des Attributs: 0x02 (2 Bytes)
          Resident-Flag: 0x00 (Resident)
          Länge des Namens: 0x00 (kein Name)
          Offset zum Namen: 0x00 (kein Name)
          Flags: 0x00
          Attribut-ID: 0x0000
          Die Länge des Attributs (0x02 oder 2 Bytes) umfasst den Header und die Daten. Da dieses Attribut resident ist, befinden sich die Daten direkt im MFT-Eintrag.
