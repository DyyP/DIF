U4

Datum: 2024-04-18T09:00:00+02:00


1.2)
        dd:
        
            Syntax: dd if=input_file of=output_file [options]
            Funktion: Kopiert Daten von einer Datei oder einem Gerät auf eine andere Datei oder ein anderes Gerät.
            Optionen:
                bs=blocksize: Blockgröße für die Kopie (Standard: 512 Byte)
                count=number: Anzahl der zu kopierenden Blöcke
                skip=count: Anzahl der zu überspringenden Blöcke am Anfang
                status=progress: Zeigt den Kopiervorgang als Fortschrittsbalken an
        
        dc3dd:
        
            Syntax: dc3dd if=input_file of=output_file [options]
            Funktion: Kopiert Daten von einer Datei oder einem Gerät auf eine andere Datei oder ein anderes Gerät, ist aber optimiert für SquashFS-Dateisysteme.
            Optionen:
                bs=blocksize: Blockgröße für die Kopie (Standard: 1048576 Byte)
                count=number: Anzahl der zu kopierenden Blöcke
                skip=count: Anzahl der zu überspringenden Blöcke am Anfang
        
        dcfldd:
        
            Syntax: dcfldd if=input_file of=output_file [options]
            Funktion: Kopiert Daten von einer Datei oder einem Gerät auf eine andere Datei oder ein anderes Gerät, ist aber optimiert für SquashFS-Dateisysteme und ermöglicht die Komprimierung oder Dekomprimierung während des Kopiervorgangs.
            Optionen:
                bs=blocksize: Blockgröße für die Kopie (Standard: 1048576 Byte)
                count=number: Anzahl der zu kopierenden Blöcke
                skip=count: Anzahl der zu überspringenden Blöcke am Anfang
                compress: Komprimiert die Daten während der Kopie
                decompress: Dekomprimiert die Daten während der Kopie
                
1.3)
        Die Option conv=noerror beim Befehl dd weist das Tool an, den Kopiervorgang fortzusetzen, selbst wenn Lesefehler auftreten.
    
        Standardverhalten: Ohne conv=noerror stoppt dd den Kopiervorgang bei einem Lesefehler und meldet einen Fehler.
        Verhalten mit conv=noerror:
            Fehlerhafte Stellen: Bei Lesefehlern füllt dd die betroffenen Stellen im Zielmedium mit Nullen (0-Bytes) auf.
            Fortsetzung: Der Kopiervorgang wird trotz der Fehler fortgesetzt, um eine möglichst vollständige Kopie der Quelle zu erstellen.

1.4)
            Standardverhalten: Ohne conv=sync schreibt dd die Daten in Puffer und synchronisiert diese ggf. verzögert.
            Verhalten mit conv=sync:
                Synchroner Schreibvorgang: Jeder Datenblock wird unmittelbar nach dem Lesen vom Quellmedium auf das Zielmedium geschrieben und synchronisiert.
                Verzögerungen: Dies kann zu Verzögerungen beim Kopiervorgang führen, da die Schreibgeschwindigkeit des Zielmediums den Prozess limitieren kann.

        +
            Datenintegrität: Die Option conv=sync gewährleistet die Datenintegrität des Abbilds, da jeder geschriebene Datenblock synchronisiert wird.
            Zuverlässigkeit: Dies erhöht die Zuverlässigkeit des Abbilds und minimiert das Risiko von Datenverlusten oder Beschädigungen.

        -
            Geschwindigkeit: Die Verwendung von conv=sync kann den Kopiervorgang deutlich verlangsamen, da die Schreibgeschwindigkeit des Zielmediums den Prozess limitiert.
            Ressourcenverbrauch: Der synchrone Schreibvorgang kann die Systemressourcen stärker belasten, insbesondere bei großen Datenträgern
        
1.5)        dc3dd erkennt und protokolliert standardmäßig fehlerhafte Sektoren.
            Es versucht standardmäßig, den fehlerhaften Sektor erneut zu lesen.
            Es gibt verschiedene Optionen, um das Verhalten von dc3dd bei fehlerhaften Sektoren zu steuern.
            dc3dd bietet keine integrierte Funktion zur Wiederherstellung von Daten aus fehlerhaften Sektoren.

2.1)    Datum: 2024-04-18T09:00:00+02:00        
        Datei: vUSB.img
        Genutzt GTKHash
        MD5: 01f7fd777cc239b0c87c81fc2253a219
        SHA1: 1f5dd4cd5f9209f11bdaef31bd88d2c011244581
        SHA256: 2c9c0f5117cdc3e8f3b9156bb5eef7d9563f46b4e0e4e51123711d828c89e8a2
        CRC32: ae3d049c
2.2)    mit alle 4 tools kopie erstellt
2.3)    sudo mksquashfs ~/Desktop/DIF/Uebung4/vUSB.img ~/Desktop/DIF/Uebung4/kopien/vusb_squash.squashfs
        fand ich schon allein wegen Fortschrittsbalken dabei war und viele infos
2.4)    file Desktop/DIF/Uebung4/vusb_dcfldd.img

                --> Desktop/DIF/Uebung4/vusb_dcfldd.img: DOS/MBR boot sector, code offset 0x58+2, OEM-ID "mkfs.fat",
                sectors/cluster 8, Media descriptor 0xf8, sectors/track 63, heads 255, sectors 6291456 (volumes > 32 MB), FAT (32 bit),
                sectors/FAT 6136, serial number 0x3700c1ae, unlabeled
Datum: 2024-04-25T08:28:00+02:00

2.5)    sudo dcfldd if=~/Desktop/DIF/vUSB.img  of=~/Desktop/DIF/Uebung4/vusb_dcfldd_2.img hash=sha1 hashlog=~/Desktop/DIF/Uebung4/protokoll.txt hashwindow=1M 

2.6)    sudo fls -F ~/Desktop/DIF/Uebung4/vusb_dcfldd_2.img
        r/r 4:  Bild1.jpg
        r/r 6:  Bild2.jpeg
        r/r 8:  Blue.png
        v/v 100466435:  $MBR
        v/v 100466436:  $FAT1
        v/v 100466437:  $FAT2




